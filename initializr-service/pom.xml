<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.spring.initializr</groupId>
		<artifactId>initializr</artifactId>
		<version>0.6.0.BUILD-SNAPSHOT</version>
	</parent>
	<artifactId>initializr-service</artifactId>
	<name>Spring Initializr :: Service</name>

	<properties>
		<main.basedir>${basedir}/..</main.basedir>
		<maven.build.timestamp.format>yyyy_MM_dd-HH_mm</maven.build.timestamp.format>
		<docker.image.prefix>${your-docker-image-prefix}</docker.image.prefix>
        <docker.image.name>${your-docker-image-name}</docker.image.name>
		<docker.image.tag>${maven.build.timestamp}</docker.image.tag>
		<docker.image>${docker.image.prefix}/${docker.image.name}</docker.image>
		<azure.authentication.server>${your-azure-authentication-server}</azure.authentication.server>
		<azure.resource.group>${your-azure-resource-group}</azure.resource.group>
		<azure.cr.server>${your-azure-cr-server}</azure.cr.server>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>io.spring.initializr</groupId>
			<artifactId>initializr-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.spring.initializr</groupId>
			<artifactId>initializr-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.cache</groupId>
			<artifactId>cache-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.spring.initializr</groupId>
			<artifactId>initializr-generator</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>initializr-service</finalName>
		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
					<dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>
						${project.build.outputDirectory}/git.properties
					</generateGitPropertiesFilename>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<excludeDevtools>true</excludeDevtools>
						</configuration>
					</execution>
					<execution>
						<id>build information</id>
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<versions.spring-boot>${spring.boot.version}
								</versions.spring-boot>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Git Commit Id -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.4</version>

				<executions>
					<execution>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Build Docker Image -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>
					<execution>
						<id>image-tag-timestamp</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<repository>${docker.image}</repository>
							<tag>${docker.image.tag}</tag>
							<buildArgs>
								<JAR_FILE>initializr-service.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</execution>
					<execution>
						<id>image-tag-latest</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<repository>${docker.image}</repository>
							<tag>latest</tag>
							<buildArgs>
								<JAR_FILE>initializr-service.jar</JAR_FILE>
							</buildArgs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-webapp-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<authentication>
						<serverId>${azure.authentication.server}</serverId>
					</authentication>
					<resourceGroup>${azure.resource.group}</resourceGroup>
					<appName>${docker.image.name}</appName>
					<region>japaneast</region>
					<containerSettings>
						<imageName>${docker.image}:latest</imageName>
						<serverId>${azure.cr.server}</serverId>
						<registryUrl>https://${docker.image.prefix}</registryUrl>
					</containerSettings>
					<appSettings>
						<property>
							<name>PORT</name>
							<value>8080</value>
						</property>
					</appSettings>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
